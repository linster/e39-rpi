// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PicoToPi.proto

package ca.stefanm.e39.proto;

public final class PicoToPiOuterClass {
  private PicoToPiOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PicoToPiOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ca.stefanm.e39.proto.PicoToPi)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.ca.stefanm.e39.proto.PicoToPi.MessageType messageType = 1;</code>
     * @return The enum numeric value on the wire for messageType.
     */
    int getMessageTypeValue();
    /**
     * <code>.ca.stefanm.e39.proto.PicoToPi.MessageType messageType = 1;</code>
     * @return The messageType.
     */
    ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi.MessageType getMessageType();

    /**
     * <code>.ca.stefanm.e39.proto.ConfigProto existingConfig = 2;</code>
     * @return Whether the existingConfig field is set.
     */
    boolean hasExistingConfig();
    /**
     * <code>.ca.stefanm.e39.proto.ConfigProto existingConfig = 2;</code>
     * @return The existingConfig.
     */
    ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProto getExistingConfig();
    /**
     * <code>.ca.stefanm.e39.proto.ConfigProto existingConfig = 2;</code>
     */
    ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProtoOrBuilder getExistingConfigOrBuilder();

    /**
     * <code>string loggerStatement = 3;</code>
     * @return The loggerStatement.
     */
    java.lang.String getLoggerStatement();
    /**
     * <code>string loggerStatement = 3;</code>
     * @return The bytes for loggerStatement.
     */
    com.google.protobuf.ByteString
        getLoggerStatementBytes();
  }
  /**
   * Protobuf type {@code ca.stefanm.e39.proto.PicoToPi}
   */
  public static final class PicoToPi extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ca.stefanm.e39.proto.PicoToPi)
      PicoToPiOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PicoToPi.newBuilder() to construct.
    private PicoToPi(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PicoToPi() {
      messageType_ = 0;
      loggerStatement_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PicoToPi();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ca.stefanm.e39.proto.PicoToPiOuterClass.internal_static_ca_stefanm_e39_proto_PicoToPi_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ca.stefanm.e39.proto.PicoToPiOuterClass.internal_static_ca_stefanm_e39_proto_PicoToPi_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi.class, ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi.Builder.class);
    }

    /**
     * Protobuf enum {@code ca.stefanm.e39.proto.PicoToPi.MessageType}
     */
    public enum MessageType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>HeartbeatRequest = 0;</code>
       */
      HeartbeatRequest(0),
      /**
       * <code>HeartbeatResponse = 1;</code>
       */
      HeartbeatResponse(1),
      /**
       * <pre>
       *For the logger on the pico to shuttle to Rpi.
       * </pre>
       *
       * <code>LogStatement = 2;</code>
       */
      LogStatement(2),
      /**
       * <pre>
       *Dump the config object
       * </pre>
       *
       * <code>ConfigStatusResponse = 3;</code>
       */
      ConfigStatusResponse(3),
      /**
       * <pre>
       *TODO we could have a mechanism where the pi sends to the pico
       *TODO the number of ibus events it processed (knob turn messages?)
       *TODO and if the pico isn't receiveng this heartbeat often enough,
       *TODO it could auto-restart the PI.
       * </pre>
       *
       * <code>PiSoftPowerRestartX = 4;</code>
       */
      PiSoftPowerRestartX(4),
      /**
       * <pre>
       *Ask the RPI to legit restart
       * </pre>
       *
       * <code>PiSoftPowerRestartPi = 5;</code>
       */
      PiSoftPowerRestartPi(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>HeartbeatRequest = 0;</code>
       */
      public static final int HeartbeatRequest_VALUE = 0;
      /**
       * <code>HeartbeatResponse = 1;</code>
       */
      public static final int HeartbeatResponse_VALUE = 1;
      /**
       * <pre>
       *For the logger on the pico to shuttle to Rpi.
       * </pre>
       *
       * <code>LogStatement = 2;</code>
       */
      public static final int LogStatement_VALUE = 2;
      /**
       * <pre>
       *Dump the config object
       * </pre>
       *
       * <code>ConfigStatusResponse = 3;</code>
       */
      public static final int ConfigStatusResponse_VALUE = 3;
      /**
       * <pre>
       *TODO we could have a mechanism where the pi sends to the pico
       *TODO the number of ibus events it processed (knob turn messages?)
       *TODO and if the pico isn't receiveng this heartbeat often enough,
       *TODO it could auto-restart the PI.
       * </pre>
       *
       * <code>PiSoftPowerRestartX = 4;</code>
       */
      public static final int PiSoftPowerRestartX_VALUE = 4;
      /**
       * <pre>
       *Ask the RPI to legit restart
       * </pre>
       *
       * <code>PiSoftPowerRestartPi = 5;</code>
       */
      public static final int PiSoftPowerRestartPi_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MessageType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static MessageType forNumber(int value) {
        switch (value) {
          case 0: return HeartbeatRequest;
          case 1: return HeartbeatResponse;
          case 2: return LogStatement;
          case 3: return ConfigStatusResponse;
          case 4: return PiSoftPowerRestartX;
          case 5: return PiSoftPowerRestartPi;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          MessageType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
              public MessageType findValueByNumber(int number) {
                return MessageType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi.getDescriptor().getEnumTypes().get(0);
      }

      private static final MessageType[] VALUES = values();

      public static MessageType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private MessageType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:ca.stefanm.e39.proto.PicoToPi.MessageType)
    }

    public static final int MESSAGETYPE_FIELD_NUMBER = 1;
    private int messageType_ = 0;
    /**
     * <code>.ca.stefanm.e39.proto.PicoToPi.MessageType messageType = 1;</code>
     * @return The enum numeric value on the wire for messageType.
     */
    @java.lang.Override public int getMessageTypeValue() {
      return messageType_;
    }
    /**
     * <code>.ca.stefanm.e39.proto.PicoToPi.MessageType messageType = 1;</code>
     * @return The messageType.
     */
    @java.lang.Override public ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi.MessageType getMessageType() {
      ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi.MessageType result = ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi.MessageType.forNumber(messageType_);
      return result == null ? ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi.MessageType.UNRECOGNIZED : result;
    }

    public static final int EXISTINGCONFIG_FIELD_NUMBER = 2;
    private ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProto existingConfig_;
    /**
     * <code>.ca.stefanm.e39.proto.ConfigProto existingConfig = 2;</code>
     * @return Whether the existingConfig field is set.
     */
    @java.lang.Override
    public boolean hasExistingConfig() {
      return existingConfig_ != null;
    }
    /**
     * <code>.ca.stefanm.e39.proto.ConfigProto existingConfig = 2;</code>
     * @return The existingConfig.
     */
    @java.lang.Override
    public ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProto getExistingConfig() {
      return existingConfig_ == null ? ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProto.getDefaultInstance() : existingConfig_;
    }
    /**
     * <code>.ca.stefanm.e39.proto.ConfigProto existingConfig = 2;</code>
     */
    @java.lang.Override
    public ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProtoOrBuilder getExistingConfigOrBuilder() {
      return existingConfig_ == null ? ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProto.getDefaultInstance() : existingConfig_;
    }

    public static final int LOGGERSTATEMENT_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object loggerStatement_ = "";
    /**
     * <code>string loggerStatement = 3;</code>
     * @return The loggerStatement.
     */
    @java.lang.Override
    public java.lang.String getLoggerStatement() {
      java.lang.Object ref = loggerStatement_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        loggerStatement_ = s;
        return s;
      }
    }
    /**
     * <code>string loggerStatement = 3;</code>
     * @return The bytes for loggerStatement.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLoggerStatementBytes() {
      java.lang.Object ref = loggerStatement_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        loggerStatement_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (messageType_ != ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi.MessageType.HeartbeatRequest.getNumber()) {
        output.writeEnum(1, messageType_);
      }
      if (existingConfig_ != null) {
        output.writeMessage(2, getExistingConfig());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(loggerStatement_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, loggerStatement_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (messageType_ != ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi.MessageType.HeartbeatRequest.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, messageType_);
      }
      if (existingConfig_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getExistingConfig());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(loggerStatement_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, loggerStatement_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi)) {
        return super.equals(obj);
      }
      ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi other = (ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi) obj;

      if (messageType_ != other.messageType_) return false;
      if (hasExistingConfig() != other.hasExistingConfig()) return false;
      if (hasExistingConfig()) {
        if (!getExistingConfig()
            .equals(other.getExistingConfig())) return false;
      }
      if (!getLoggerStatement()
          .equals(other.getLoggerStatement())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MESSAGETYPE_FIELD_NUMBER;
      hash = (53 * hash) + messageType_;
      if (hasExistingConfig()) {
        hash = (37 * hash) + EXISTINGCONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getExistingConfig().hashCode();
      }
      hash = (37 * hash) + LOGGERSTATEMENT_FIELD_NUMBER;
      hash = (53 * hash) + getLoggerStatement().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ca.stefanm.e39.proto.PicoToPi}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ca.stefanm.e39.proto.PicoToPi)
        ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPiOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ca.stefanm.e39.proto.PicoToPiOuterClass.internal_static_ca_stefanm_e39_proto_PicoToPi_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ca.stefanm.e39.proto.PicoToPiOuterClass.internal_static_ca_stefanm_e39_proto_PicoToPi_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi.class, ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi.Builder.class);
      }

      // Construct using ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        messageType_ = 0;
        existingConfig_ = null;
        if (existingConfigBuilder_ != null) {
          existingConfigBuilder_.dispose();
          existingConfigBuilder_ = null;
        }
        loggerStatement_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ca.stefanm.e39.proto.PicoToPiOuterClass.internal_static_ca_stefanm_e39_proto_PicoToPi_descriptor;
      }

      @java.lang.Override
      public ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi getDefaultInstanceForType() {
        return ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi.getDefaultInstance();
      }

      @java.lang.Override
      public ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi build() {
        ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi buildPartial() {
        ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi result = new ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.messageType_ = messageType_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.existingConfig_ = existingConfigBuilder_ == null
              ? existingConfig_
              : existingConfigBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.loggerStatement_ = loggerStatement_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi) {
          return mergeFrom((ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi other) {
        if (other == ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi.getDefaultInstance()) return this;
        if (other.messageType_ != 0) {
          setMessageTypeValue(other.getMessageTypeValue());
        }
        if (other.hasExistingConfig()) {
          mergeExistingConfig(other.getExistingConfig());
        }
        if (!other.getLoggerStatement().isEmpty()) {
          loggerStatement_ = other.loggerStatement_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                messageType_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getExistingConfigFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                loggerStatement_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int messageType_ = 0;
      /**
       * <code>.ca.stefanm.e39.proto.PicoToPi.MessageType messageType = 1;</code>
       * @return The enum numeric value on the wire for messageType.
       */
      @java.lang.Override public int getMessageTypeValue() {
        return messageType_;
      }
      /**
       * <code>.ca.stefanm.e39.proto.PicoToPi.MessageType messageType = 1;</code>
       * @param value The enum numeric value on the wire for messageType to set.
       * @return This builder for chaining.
       */
      public Builder setMessageTypeValue(int value) {
        messageType_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.ca.stefanm.e39.proto.PicoToPi.MessageType messageType = 1;</code>
       * @return The messageType.
       */
      @java.lang.Override
      public ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi.MessageType getMessageType() {
        ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi.MessageType result = ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi.MessageType.forNumber(messageType_);
        return result == null ? ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi.MessageType.UNRECOGNIZED : result;
      }
      /**
       * <code>.ca.stefanm.e39.proto.PicoToPi.MessageType messageType = 1;</code>
       * @param value The messageType to set.
       * @return This builder for chaining.
       */
      public Builder setMessageType(ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi.MessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        messageType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.ca.stefanm.e39.proto.PicoToPi.MessageType messageType = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessageType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        messageType_ = 0;
        onChanged();
        return this;
      }

      private ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProto existingConfig_;
      private com.google.protobuf.SingleFieldBuilderV3<
          ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProto, ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProto.Builder, ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProtoOrBuilder> existingConfigBuilder_;
      /**
       * <code>.ca.stefanm.e39.proto.ConfigProto existingConfig = 2;</code>
       * @return Whether the existingConfig field is set.
       */
      public boolean hasExistingConfig() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.ca.stefanm.e39.proto.ConfigProto existingConfig = 2;</code>
       * @return The existingConfig.
       */
      public ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProto getExistingConfig() {
        if (existingConfigBuilder_ == null) {
          return existingConfig_ == null ? ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProto.getDefaultInstance() : existingConfig_;
        } else {
          return existingConfigBuilder_.getMessage();
        }
      }
      /**
       * <code>.ca.stefanm.e39.proto.ConfigProto existingConfig = 2;</code>
       */
      public Builder setExistingConfig(ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProto value) {
        if (existingConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          existingConfig_ = value;
        } else {
          existingConfigBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.ca.stefanm.e39.proto.ConfigProto existingConfig = 2;</code>
       */
      public Builder setExistingConfig(
          ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProto.Builder builderForValue) {
        if (existingConfigBuilder_ == null) {
          existingConfig_ = builderForValue.build();
        } else {
          existingConfigBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.ca.stefanm.e39.proto.ConfigProto existingConfig = 2;</code>
       */
      public Builder mergeExistingConfig(ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProto value) {
        if (existingConfigBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            existingConfig_ != null &&
            existingConfig_ != ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProto.getDefaultInstance()) {
            getExistingConfigBuilder().mergeFrom(value);
          } else {
            existingConfig_ = value;
          }
        } else {
          existingConfigBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.ca.stefanm.e39.proto.ConfigProto existingConfig = 2;</code>
       */
      public Builder clearExistingConfig() {
        bitField0_ = (bitField0_ & ~0x00000002);
        existingConfig_ = null;
        if (existingConfigBuilder_ != null) {
          existingConfigBuilder_.dispose();
          existingConfigBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.ca.stefanm.e39.proto.ConfigProto existingConfig = 2;</code>
       */
      public ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProto.Builder getExistingConfigBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getExistingConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>.ca.stefanm.e39.proto.ConfigProto existingConfig = 2;</code>
       */
      public ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProtoOrBuilder getExistingConfigOrBuilder() {
        if (existingConfigBuilder_ != null) {
          return existingConfigBuilder_.getMessageOrBuilder();
        } else {
          return existingConfig_ == null ?
              ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProto.getDefaultInstance() : existingConfig_;
        }
      }
      /**
       * <code>.ca.stefanm.e39.proto.ConfigProto existingConfig = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProto, ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProto.Builder, ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProtoOrBuilder> 
          getExistingConfigFieldBuilder() {
        if (existingConfigBuilder_ == null) {
          existingConfigBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProto, ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProto.Builder, ca.stefanm.e39.proto.ConfigProtoOuterClass.ConfigProtoOrBuilder>(
                  getExistingConfig(),
                  getParentForChildren(),
                  isClean());
          existingConfig_ = null;
        }
        return existingConfigBuilder_;
      }

      private java.lang.Object loggerStatement_ = "";
      /**
       * <code>string loggerStatement = 3;</code>
       * @return The loggerStatement.
       */
      public java.lang.String getLoggerStatement() {
        java.lang.Object ref = loggerStatement_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          loggerStatement_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string loggerStatement = 3;</code>
       * @return The bytes for loggerStatement.
       */
      public com.google.protobuf.ByteString
          getLoggerStatementBytes() {
        java.lang.Object ref = loggerStatement_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          loggerStatement_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string loggerStatement = 3;</code>
       * @param value The loggerStatement to set.
       * @return This builder for chaining.
       */
      public Builder setLoggerStatement(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        loggerStatement_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>string loggerStatement = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLoggerStatement() {
        loggerStatement_ = getDefaultInstance().getLoggerStatement();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>string loggerStatement = 3;</code>
       * @param value The bytes for loggerStatement to set.
       * @return This builder for chaining.
       */
      public Builder setLoggerStatementBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        loggerStatement_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ca.stefanm.e39.proto.PicoToPi)
    }

    // @@protoc_insertion_point(class_scope:ca.stefanm.e39.proto.PicoToPi)
    private static final ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi();
    }

    public static ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PicoToPi>
        PARSER = new com.google.protobuf.AbstractParser<PicoToPi>() {
      @java.lang.Override
      public PicoToPi parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PicoToPi> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PicoToPi> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ca.stefanm.e39.proto.PicoToPiOuterClass.PicoToPi getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ca_stefanm_e39_proto_PicoToPi_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ca_stefanm_e39_proto_PicoToPi_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016PicoToPi.proto\022\024ca.stefanm.e39.proto\032\021" +
      "ConfigProto.proto\"\273\002\n\010PicoToPi\022?\n\013messag" +
      "eType\030\001 \001(\0162*.ca.stefanm.e39.proto.PicoT" +
      "oPi.MessageType\0229\n\016existingConfig\030\002 \001(\0132" +
      "!.ca.stefanm.e39.proto.ConfigProto\022\027\n\017lo" +
      "ggerStatement\030\003 \001(\t\"\231\001\n\013MessageType\022\024\n\020H" +
      "eartbeatRequest\020\000\022\025\n\021HeartbeatResponse\020\001" +
      "\022\020\n\014LogStatement\020\002\022\030\n\024ConfigStatusRespon" +
      "se\020\003\022\027\n\023PiSoftPowerRestartX\020\004\022\030\n\024PiSoftP" +
      "owerRestartPi\020\005b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          ca.stefanm.e39.proto.ConfigProtoOuterClass.getDescriptor(),
        });
    internal_static_ca_stefanm_e39_proto_PicoToPi_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ca_stefanm_e39_proto_PicoToPi_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ca_stefanm_e39_proto_PicoToPi_descriptor,
        new java.lang.String[] { "MessageType", "ExistingConfig", "LoggerStatement", });
    ca.stefanm.e39.proto.ConfigProtoOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
